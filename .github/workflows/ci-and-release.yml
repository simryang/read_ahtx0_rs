name: CI & Release

on:
  push:
    branches: [ main ]
    tags:     [ 'v*' ]
  pull_request:
    branches: [ main ]

# ① Release 생성 권한 허용
permissions:
  contents: write

jobs:
  build-linux:
    name: 🛠️ Build on Linux
    runs-on: ubuntu-latest
    if: github.event_name != 'push' || github.ref_type != 'tag'
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable
      - run: cargo build
      - run: cargo build --release
      - run: ls -l target/{debug,release}

  release:
    name: 🚀 Create GitHub Release
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    steps:
      - uses: actions/checkout@v3
      - name: Setup Rust toolchain
        uses: actions-rust-lang/setup-rust-toolchain@v1
        with:
          toolchain: stable

      - name: Build release artifacts
        run: cargo build --release

      - id: create_release
        uses: actions/create-release@v1
        with:
          # ② token은 반드시 with 블록 최상단에
          token: ${{ secrets.GITHUB_TOKEN }}
          tag_name:      ${{ github.ref_name }}
          release_name:  Release ${{ github.ref_name }}
          draft:         false
          prerelease:    false

      - name: Upload shared library (.so)
        uses: actions/upload-release-asset@v1
        with:
          upload_url:         ${{ steps.create_release.outputs.upload_url }}
          asset_path:         target/release/libread_ahtx0_rs.so
          asset_name:         libread_ahtx0_rs.so
          asset_content_type: application/octet-stream

      - name: Upload versioned symlink
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/libread_ahtx0_rs.so.${{ github.ref_name }}
          asset_name: libread_ahtx0_rs.so.${{ github.ref_name }}
          asset_content_type: application/octet-stream

      - name: Upload CLI binary
        uses: actions/upload-release-asset@v1
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: target/release/read_ahtx0_cli
          asset_name: read_ahtx0_cli
          asset_content_type: application/octet-stream
